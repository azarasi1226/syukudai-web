version: 0.2

env:
  variables:
    REGION: "ap-northeast-1"
    AWS_ACCOUNT_ID: "032356302957"
    REPOSITORY_NAME: "kazuki-ecr"
    ECS_TASK_DEFINITION_ARN: "arn:aws:ecs:ap-northeast-1:032356302957:task-definition/kazuki-task"

phases:
  pre_build:
    commands:
      # ECRにログインをする
      - echo "${REGION} ${AWS_ACCOUNT_ID} ${REPOSITORY_NAME}"
      - aws --version
      - aws ecr get-login-password --region ${REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com
      # RepositoryのURLを環境変数として一時作成しておく。
      - REPOSITORY_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${REPOSITORY_NAME}
      # Commitのハッシュ番号を取る
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      # DockerImageのTagをハッシュ番号から作る。
      - IMAGE_TAG=${COMMIT_HASH:=latest}

  build:
    commands:
      # どっかーイメージを作成する。　↑で作ったURLとTagを組み合わせてね。
      - echo "Imageを作成します。"
      - docker build -t ${REPOSITORY_URI}:latest .

      - docker tag ${REPOSITORY_URI}:latest ${REPOSITORY_URI}:${IMAGE_TAG}
      - docker image ls

  post_build:
    commands:
      # 作ったどっかーじめーじをpushする
      - echo "ECRにPushしています...."
      - docker push ${REPOSITORY_URI}:latest
      - docker push ${REPOSITORY_URI}:${IMAGE_TAG}
      - echo "イメージがpushできました!!!"
      - echo $REPOSITORY_URI:$IMAGE_TAG

      # ImageDetail.jsonを作成する
      - echo Writing image details to imageDetail.json...
      - printf '{"ImageURI":"${REPOSITORY_URI:IMAGE_TAG}"}' > imageDetail.json


      #aa
      - $(aws ecs describe-task-definition --task-definition ${ECS_TASK_DEFINITION_ARN} --query taskDefinition | jq '.containerDefinitions[0].image="<IMAGE1_NAME>"' > taskdef.json)
artifacts:
  files:
   - imageDetail.json
   - appspec.yml 
   - taskdef.json